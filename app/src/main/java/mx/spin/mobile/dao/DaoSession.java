package mx.spin.mobile.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import mx.spin.mobile.dao.User;
import mx.spin.mobile.dao.Pool;
import mx.spin.mobile.dao.Equipment;
import mx.spin.mobile.dao.dealers;
import mx.spin.mobile.dao.states;
import mx.spin.mobile.dao.countries;

import mx.spin.mobile.dao.UserDao;
import mx.spin.mobile.dao.PoolDao;
import mx.spin.mobile.dao.EquipmentDao;
import mx.spin.mobile.dao.dealersDao;
import mx.spin.mobile.dao.statesDao;
import mx.spin.mobile.dao.countriesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig poolDaoConfig;
    private final DaoConfig equipmentDaoConfig;
    private final DaoConfig dealersDaoConfig;
    private final DaoConfig statesDaoConfig;
    private final DaoConfig countriesDaoConfig;

    private final UserDao userDao;
    private final PoolDao poolDao;
    private final EquipmentDao equipmentDao;
    private final dealersDao dealersDao;
    private final statesDao statesDao;
    private final countriesDao countriesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        poolDaoConfig = daoConfigMap.get(PoolDao.class).clone();
        poolDaoConfig.initIdentityScope(type);

        equipmentDaoConfig = daoConfigMap.get(EquipmentDao.class).clone();
        equipmentDaoConfig.initIdentityScope(type);

        dealersDaoConfig = daoConfigMap.get(dealersDao.class).clone();
        dealersDaoConfig.initIdentityScope(type);

        statesDaoConfig = daoConfigMap.get(statesDao.class).clone();
        statesDaoConfig.initIdentityScope(type);

        countriesDaoConfig = daoConfigMap.get(countriesDao.class).clone();
        countriesDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        poolDao = new PoolDao(poolDaoConfig, this);
        equipmentDao = new EquipmentDao(equipmentDaoConfig, this);
        dealersDao = new dealersDao(dealersDaoConfig, this);
        statesDao = new statesDao(statesDaoConfig, this);
        countriesDao = new countriesDao(countriesDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Pool.class, poolDao);
        registerDao(Equipment.class, equipmentDao);
        registerDao(dealers.class, dealersDao);
        registerDao(states.class, statesDao);
        registerDao(countries.class, countriesDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        poolDaoConfig.getIdentityScope().clear();
        equipmentDaoConfig.getIdentityScope().clear();
        dealersDaoConfig.getIdentityScope().clear();
        statesDaoConfig.getIdentityScope().clear();
        countriesDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public PoolDao getPoolDao() {
        return poolDao;
    }

    public EquipmentDao getEquipmentDao() {
        return equipmentDao;
    }

    public dealersDao getDealersDao() {
        return dealersDao;
    }

    public statesDao getStatesDao() {
        return statesDao;
    }

    public countriesDao getCountriesDao() {
        return countriesDao;
    }

}
